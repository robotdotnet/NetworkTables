plugins {
    id 'net.ltgt.errorprone' version '0.0.8'
    id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '1.5.1'
}

// Ensure that the WPILibVersioningPlugin is setup by setting the release type, if releaseType wasn't
// already specified on the command line
if (!hasProperty('releaseType')) {
    WPILibVersion {
        releaseType = 'dev'
    }
}

task downloadNtCoreArm() {
    description = 'Downloads the ntcore arm maven dependency.'
    group = 'WPILib'
    def depFolder = "${project.buildDir}/dependencies"
    def ntZip = file("${depFolder}/ntcorearm.zip")
    outputs.file(ntZip)
    def ntcore

    doFirst {
        def ntDependency = project.dependencies.create("edu.wpi.first.wpilib.networktables.cpp:NetworkTables:+:arm@zip")
        def ntConfig = project.configurations.detachedConfiguration(ntDependency)
        ntConfig.setTransitive(false)
        ntcore = ntConfig.files[0].canonicalFile
    }

    doLast {
        copy {
            from ntcore
            rename 'NetworkTables(.+)', 'ntcorearm.zip'
            into depFolder
        }
    }
}

task downloadNtCoreDT() {
    description = 'Downloads the ntcore desktop maven dependency.'
    group = 'WPILib'
    def depFolder = "${project.buildDir}/dependencies"
    def ntZip = file("${depFolder}/ntcoredt.zip")
    outputs.file(ntZip)
    def ntcore

    doFirst {
        def ntDependency = project.dependencies.create("edu.wpi.first.wpilib.networktables.cpp:NetworkTables:+:desktop@zip")
        def ntConfig = project.configurations.detachedConfiguration(ntDependency)
        ntConfig.setTransitive(false)
        ntcore = ntConfig.files[0].canonicalFile
    }

    doLast {
        copy {
            from ntcore
            rename 'NetworkTables(.+)', 'ntcoredt.zip'
            into depFolder
        }
    }
}

def netTablesArmUnzipLocation = "$buildDir/networktablesarm"
def netTablesDtUnzipLocation = "$buildDir/networktablesdt"

// Create a task that will unzip the networktables files into a temporary build directory
task unzipNetworkTablesArm(type: Copy) {
    description = 'Unzips the networktables arm maven dependency so that the include files and libraries can be used'
    group = 'WPILib'
    dependsOn downloadNtCoreArm

    from zipTree(downloadNtCoreArm.outputs.files.singleFile)
    into netTablesArmUnzipLocation
}

// Create a task that will unzip the networktables files into a temporary build directory
task unzipNetworkTablesDT(type: Copy) {
    description = 'Unzips the networktables desktop maven dependency so that the include files and libraries can be used'
    group = 'WPILib'
    dependsOn downloadNtCoreDT

    from zipTree(downloadNtCoreDT.outputs.files.singleFile)
    into netTablesDtUnzipLocation
}

task build() {

}

task clean(type: Delete) {
    description = "Deletes the build directory"
    group = "Build"
    delete buildDir
}

build.dependsOn unzipNetworkTablesArm
build.dependsOn unzipNetworkTablesDT

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
